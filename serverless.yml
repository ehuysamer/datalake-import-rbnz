service: datalake-import-rbnz

frameworkVersion: "3"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  endpointType: REGIONAL
  region: ap-southeast-2
  stage: prod
  tags:
    project: datalake
    instance: rbnz-raw
    env: ${self:provider.stage}
  deploymentPrefix: "${self:provider.tags.project}-${self:provider.tags.instance}-${self:provider.tags.env}"
  deploymentBucket:
    name: "infra-deploy-all"
    maxPreviousDeploymentArtifacts: 2
    blockPublicAccess: true
    versioning: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: arn:aws:s3:::${file(./src/config/config.json):bucketName}/${file(./src/config/config.json):bucketRootPrefix}/*
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

package:
  excludeDevDependencies: true
  exclude:
    - "*.todo"
    - "*.md"
    - "test/**"
    #- "node_modules/**"
    - "infra/**"
    - "*.ncg.json"
    - "*.txt"
    - "buildspec.yml"
    - "nodemon.json"

    #- include-me.js
    #- include-me-dir/**

functions:
  status:
    handler: src/handlers/status.handler
    description: "Get the status of the service"
    memorySize: 128
    events:
      - http:
          path: status
          method: get
          private: true
          cors: true
  downloadOcr:
    handler: src/handlers/downloadOcr.handler
    description: "Download the raw ocr web page"
    memorySize: 128
    events:
      - http:
          path: downloadOcr
          method: post
          private: true
          cors: true
      - schedule:
          # rate: cron(0 13 ? * MON-FRI *)
          rate: cron(0 13 * * ? *)
          enabled: true
